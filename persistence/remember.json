{
  "version": 1,
  "updated_at": "2025-09-10T03:30:45.070Z",
  "owner": "workspace",
  "policy": {
    "autoflush": true,
    "debounce_ms": 1000,
    "max_bytes": 524288,
    "prune": {
      "preserve_types": [
        "decision"
      ],
      "order": "last_seen_at_asc"
    }
  },
  "sections": {
    "dos": [
      "Prefer small, focused diffs; keep changes scoped to the request.",
      "Ask for clarification when requirements are ambiguous.",
      "Keep a single source of truth for persistence (persistence/*).",
      "Run format and lints after edits; fix only relevant warnings.",
      "Document decisions and status in persistence/history.jsonl and docs/session-log.md.",
      "Use explicit, readable code and comments where needed.",
      "Respect 'no auto-fix on save'; all fixes are via commands.",
      "Maintain separation of tools: html-validate for HTML; ESLint for JS; Stylelint for CSS; Prettier for formatting."
    ],
    "donts": [
      "Do not recreate or use legacy .codex/ persistence.",
      "Do not introduce additional logs beyond session-log.md and persistence/history.jsonl.",
      "Do not store secrets or PII in any persistence files.",
      "Do not make unrelated or sweeping refactors without approval.",
      "Do not loosen linter rules without noting rationale."
    ],
    "instructions": {
      "current_focus": [
        "All-new Zencoder persistence: persistence/remember.json + history.jsonl + status.json only.",
        "Startup (npm start) must: purge legacy, seed history if missing, ingest remember+history, update status, enforce 15-day FIFO.",
        "HTML validation and cleanup: fix legacy HTML patterns incrementally with html-validate; no auto-fix on save.",
        "Maintain developer ergonomics: clear npm scripts for linting/formatting; concise session logging."
      ],
      "next_tasks": [
        "Populate mission-critical operations SOPs and decisions into remember.json (this file).",
        "Audit high-traffic HTML pages (index.html, index-2.html, grammar pages) and log per-file issues to history.jsonl.",
        "Implement focused fixes for repeated HTML issues (attr quotes, void/self-closing, invalid nesting).",
        "Add optional scripted helpers for safe bulk fixes (reuse scripts/fix-void-selfclosing.js patterns).",
        "Review ESLint ignore list; ensure only project JS is linted; adjust ignores for vendor/min files.",
        "Review Stylelint rules; keep overlap with Prettier minimal; confirm ignore of HTML/HTM.",
        "Decision recorded: project does not enforce kebab-case for class/id; related lint rules suppressed.",
        "Ensure VS Code settings disable auto-fix/format on save while keeping diagnostics visible."
      ],
      "open_questions": [
        "Target browser support matrix for HTML/CSS/JS (to guide rule strictness)?",
        "Do we enforce kebab-case for class/id now or defer until after HTML normalization?",
        "Should we add automated CI lint tasks (GitHub Actions) or stay local-only?",
        "Any content accessibility requirements (WCAG) to re-enable incrementally?"
      ]
    },
    "lessons_learned": [
      {
        "title": "One canonical persistence path prevents drift",
        "notes": "Replacing multiple stores (.codex, archives) with persistence/* simplifies mental model and tooling.",
        "tags": [
          "process",
          "persistence"
        ]
      },
      {
        "title": "Separate lint and format tooling",
        "notes": "Avoid cross-lint conflicts; run targeted tools with explicit globs.",
        "tags": [
          "tooling",
          "linting"
        ]
      },
      {
        "title": "Incremental HTML remediation",
        "notes": "Disable noisy rules initially; re-enable gradually as pages are normalized.",
        "tags": [
          "html",
          "quality"
        ]
      },
      {
        "title": "Legacy logs migrated",
        "notes": "CODEx logs gleaned; new persistence established.",
        "tags": [
          "process",
          "migration"
        ]
      }
    ],
    "great_modules": [
      {
        "name": "Cinch menu CSS",
        "path": "modules/mod_cinch_menu/tmpl/css",
        "why": "Reusable patterns that can be modernized gradually (variables/responsive theming).",
        "tags": [
          "css",
          "ui"
        ]
      },
      {
        "name": "HTML validators and fixers",
        "path": "scripts/",
        "why": "Existing helpers (fix-void-selfclosing.js, extract-inline-css) provide safe patterns for incremental cleanup.",
        "tags": [
          "scripts",
          "html"
        ]
      }
    ],
    "sop": [
      {
        "name": "Startup & Persistence",
        "steps": [
          "Run npm start.",
          "startup-new.sh purges .codex, seeds persistence/history.jsonl if missing, runs persistence-manager.js.",
          "persistence-manager updates remember.json (timestamp), writes status.json, appends startup_ingest to history and a short note to docs/session-log.md.",
          "history retention keeps last 15 days; older entries archived to persistence/archive/."
        ]
      },
      {
        "name": "Edit & Validate",
        "steps": [
          "View target file, scope changes.",
          "Make minimal diffs with clear comments.",
          "Run: npm run fmt:html (if HTML), npm run format (full), lint commands (html/js/css) as needed.",
          "Capture any decisions or tricky cases into history.jsonl (type=decision or note)."
        ]
      },
      {
        "name": "Status & Decisions",
        "steps": [
          "Update instructions.current_focus/next_tasks when priorities shift.",
          "Append structured entry to persistence/history.jsonl for major decisions (type=decision with rationale).",
          "Ensure docs/session-log.md has a short human-readable summary when starting/ending a session."
        ]
      }
    ]
  }
}